<?php

namespace Modules\Core\Exceptions;

use App\Exceptions\Handler;
use Illuminate\Session\TokenMismatchException;
use Symfony\Component\HttpKernel\Exception\HttpException;
use Throwable;
use function PHPUnit\Framework\isInstanceOf;

class CoreHandler extends Handler
{
    public function render($request, Throwable $e)
    {
        if ($e instanceof HttpException) {
            $statusCode = (int)$e->getStatusCode();
            $msg = match ($statusCode) {
                401, 403 => 'You are not authorized to view the requested resource.',
                404 => 'The page you requested does not exist.',
                default => 'An error may have occurred.'
            };
            if ($request->expectsJson()
                || $request->getHost() === parse_url(env('APP_API_URL'), PHP_URL_HOST)
                || stripos($request->url(), $request->getHost() . '/api/') !== false
            ) {
                return response()->json(['message' => $msg], $statusCode);
            }
            toast($msg, 'error');
            return response()->view('core::error', ['statusCode' => $statusCode, 'msg' => $msg]);
        }
        if ($e instanceof TokenMismatchException) {
            return response()->view('core::error', ['statusCode' => 419, 'msg' => 'Page Expired']);
        }
        return parent::render($request, $e); // TODO: Change the autogenerated stub
    }
}
